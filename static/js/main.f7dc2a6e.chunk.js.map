{"version":3,"sources":["components/bottons/index.js","components/tables/index.js","components/icons/index.js","containers/index.js","serviceWorker.js","index.js"],"names":["withStyles","theme","button","margin","spacing","unit","input","display","props","classes","react_default","a","createElement","Button_default","variant","className","color","disabled","href","accept","id","multiple","type","htmlFor","component","createData","name","calories","fat","carbs","protein","rows","root","width","marginTop","overflowX","table","minWidth","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","scope","FontAwesome","loadCSS","document","querySelector","this","Icon_default","classNames","icon","iconHover","style","fontSize","React","Component","justifyContent","alignItems","&:hover","red","App","bottons","tables","icons","Boolean","window","location","hostname","match","ReactDOM","render","containers","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7dc2a6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\nfunction ContainedButtons(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" className={classes.button}>\r\n        Default\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n        Primary\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n        Secondary\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"secondary\" disabled className={classes.button}>\r\n        Disabled\r\n      </Button>\r\n      <Button variant=\"contained\" href=\"#contained-buttons\" className={classes.button}>\r\n        Link\r\n      </Button>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" component=\"span\" className={classes.button}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nContainedButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ContainedButtons);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction SimpleTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat (g)</TableCell>\r\n            <TableCell align=\"right\">Carbs (g)</TableCell>\r\n            <TableCell align=\"right\">Protein (g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { loadCSS } from 'fg-loadcss/src/loadCSS';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n  },\r\n  icon: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  iconHover: {\r\n    margin: theme.spacing.unit * 2,\r\n    '&:hover': {\r\n      color: red[800],\r\n    },\r\n  },\r\n});\r\n\r\nclass FontAwesome extends React.Component {\r\n  componentDidMount() {\r\n    loadCSS(\r\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\r\n      document.querySelector('#insertion-point-jss'),\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} />\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} color=\"primary\" />\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} color=\"secondary\" />\r\n        <Icon className={classNames(classes.icon, 'fa fa-plus-circle')} color=\"action\" />\r\n        <Icon\r\n          className={classNames(classes.iconHover, 'fa fa-plus-circle')}\r\n          color=\"error\"\r\n          style={{ fontSize: 30 }}\r\n        />\r\n        <Icon\r\n          className={classNames(classes.icon, 'fa fa-plus-circle')}\r\n          color=\"disabled\"\r\n          fontSize=\"large\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFontAwesome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FontAwesome);\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { ContainedButtons } from '../components/';\r\nimport { SimpleTable } from '../components/';\r\nimport { FontAwesome } from '../components/';\r\n\r\nfunction App() {\r\n    return (\r\n      <div className=\"App\">\r\n        hello;\r\n        <ContainedButtons></ContainedButtons>\r\n        <SimpleTable></SimpleTable>\r\n        <FontAwesome></FontAwesome>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}