{"version":3,"sources":["containers/nav/index.js","containers/header/index.js","containers/index.js","serviceWorker.js","index.js"],"names":["SideBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showDeleteList","setState","open","state","react_default","a","createElement","List_default","component","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","ListItemText_default","primary","Divider_default","Drafts_default","Send_default","onClick","Delete_default","inset","ExpandLess_default","ExpandMore_default","className","Collapse_default","in","timeout","unmountOnExit","React","Component","Header","handleClick","event","anchorEl","currentTarget","handleClose","_this2","AppBar_default","Toolbar_default","SideBarOpen","Menu_default","Typography_default","variant","color","IconButton_default","aria-label","aria-haspopup","MoreVert_default","core_Menu_default","Boolean","onClose","MenuItem_default","href","target","listOpenState","nav","App","handleNavOpen","header","window","location","hostname","match","ReactDOM","render","containers","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0gBAsGeA,cA9Eb,SAAAA,EAAYC,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACEE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMRQ,eAAiB,WACfP,EAAKQ,SAAS,CAACC,MAAQT,EAAKU,MAAMD,QANlCT,EAAKU,MAAM,CACTD,MAAO,GAHXT,wEAaiBG,KAAKO,MAAbD,KACP,OACEE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,UAAU,OACdJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAUK,QAAM,GACdN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACM,EAAAP,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAcS,QAAQ,WAGxBV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,MAEAD,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAUK,QAAM,GACdN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACU,EAAAX,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAcS,QAAQ,YAG1BV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,MAEAD,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAUK,QAAM,GACdN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAcS,QAAQ,UAGxBV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,MAEAD,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAUK,QAAM,EAACQ,QAAStB,KAAKI,gBAC3BI,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACa,EAAAd,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAce,OAAK,EAACN,QAAQ,WAC3BlB,KAAKO,MAAMD,KAAOE,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,MAAiBD,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,OAGtCD,EAAAC,EAAAC,cAAA,OAAKiB,UAAY,YACjBnB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACAD,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAUoB,GAAI7B,KAAKO,MAAMD,KAAMwB,QAAQ,OAAOC,eAAa,GAEvDvB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,oBAGAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,MACAD,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,0BAjEQuB,IAAMC,WC6EbC,cAtEb,SAAAA,EAAYtC,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACErC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KAAMJ,KAORuC,YAAc,SAAAC,GACZvC,EAAKQ,SAAS,CAAEgC,SAAUD,EAAME,iBATlCzC,EAYA0C,YAAc,WACZ1C,EAAKQ,SAAS,CAAEgC,SAAU,QAX1BxC,EAAKU,MACL,CACE8B,SAAU,MAJdxC,wEAiBA,IAAA2C,EAAAxC,KAEUqC,EAAYrC,KAAKO,MAAjB8B,SACR,OACE7B,EAAAC,EAAAC,cAAA,OAAKiB,UAAY,QACfnB,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,KAEED,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAUK,QAAM,EAACQ,QAAS,WAAKkB,EAAK5C,MAAM+C,gBACxCnC,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,SAKJD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAYqC,QAAQ,KAAKC,MAAM,UAAUpB,UAAY,QAArD,QAIAnB,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CAAYwC,aAAW,OAAOC,gBAAc,OAAO5B,QAAStB,KAAKmC,aAC/D3B,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,OAEFD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAO4B,SAAUA,EAAU/B,KAAM+C,QAAQhB,GAAWiB,QAAStD,KAAKuC,aAChE/B,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,KAAWD,EAAAC,EAAAC,cAAA,KAAG8C,KAAK,0BAA0BC,OAAO,UAAzC,WACXjD,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,KAAWD,EAAAC,EAAAC,cAAA,KAAG8C,KAAK,2BAA2BC,OAAO,UAA1C,gBACXjD,EAAAC,EAAAC,cAAC6C,EAAA9C,EAAD,KAAWD,EAAAC,EAAAC,cAAA,KAAG8C,KAAK,uBAAuBC,OAAO,UAAtC,aAQjBjD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAUoB,GAAI7B,KAAKJ,MAAM8D,cAAe5B,QAAQ,OAAOC,eAAa,GAClEvB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACfnB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,UAAU,OACdJ,EAAAC,EAAAC,cAACiD,EAAD,mBA5DO3B,IAAMC,WCIZ2B,eAtBb,SAAAA,EAAYhE,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACE/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,KAAMJ,KAMRiE,cAAgB,WACdhE,EAAKQ,SAAS,CAACC,MAAQT,EAAKU,MAAMD,QANlCT,EAAKU,MAAQ,CACXD,MAAO,GAHXT,wEAaE,OACEW,EAAAC,EAAAC,cAAA,OAAKiB,UAAW,OACbnB,EAAAC,EAAAC,cAACoD,EAAD,CAAQnB,YAAa3C,KAAK6D,cAAeH,cAAiB1D,KAAKO,MAAMD,eAlB5D0B,IAAMC,WCOJoB,QACW,cAA7BU,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.40607680.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\n\r\n\r\nclass SideBar extends React.Component\r\n{\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n      open : false\r\n    }\r\n  }\r\n\r\n  showDeleteList = () =>{\r\n    this.setState({open : !this.state.open});\r\n  }\r\n\r\n  render()\r\n  {\r\n    const {open} = this.state;\r\n    return(\r\n      <div>\r\n      <List component=\"nav\">\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <InboxIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Inbox\" />\r\n        </ListItem>\r\n\r\n        <Divider />\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Drafts\" />\r\n        </ListItem>\r\n\r\n      <Divider />\r\n\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <SendIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Sent\" />\r\n      </ListItem>\r\n\r\n      <Divider />\r\n\r\n      <ListItem button onClick={this.showDeleteList}>\r\n          <ListItemIcon>\r\n            <DeleteIcon />\r\n          </ListItemIcon>\r\n          <ListItemText inset primary=\"Delete\" />\r\n          {this.state.open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n        <div className = \"ListItem\">\r\n        <List>\r\n        <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\r\n\r\n            <List>\r\n              <ListItem>\r\n                Recycle Bin\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem>\r\n                Spam\r\n              </ListItem>\r\n            </List>\r\n\r\n        </Collapse>\r\n        </List>\r\n        </div>\r\n\r\n      </List>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport List from '@material-ui/core/List';\r\nimport SideBar  from '../nav';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\n\r\nclass Header extends React.Component\r\n{\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state =\r\n    {\r\n      anchorEl: null,\r\n    }\r\n  }\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render()\r\n  {\r\n\r\n    const { anchorEl} = this.state;\r\n    return (\r\n      <div className = \"root\">\r\n        <AppBar>\r\n\r\n          <Toolbar>\r\n            <div>\r\n            <ListItem button onClick={()=>{this.props.SideBarOpen()}} >\r\n              <ListItemIcon>\r\n                <MenuIcon />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n            </div>\r\n\r\n            <Typography variant=\"h6\" color=\"inherit\" className = \"grow\">\r\n              News\r\n            </Typography>\r\n\r\n            <IconButton aria-label=\"More\" aria-haspopup=\"true\" onClick={this.handleClick}>\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu  anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\r\n              <MenuItem ><a href=\"http://stylus-lang.com/\" target=\"_blank\">Stylus</a></MenuItem>\r\n              <MenuItem ><a href=\"https://material-ui.com/\" target=\"_blank\">Material-UI</a></MenuItem>\r\n              <MenuItem ><a href=\"https://reactjs.org/\" target=\"_blank\">React</a></MenuItem>\r\n           </Menu>\r\n\r\n          </Toolbar>\r\n\r\n        </AppBar>\r\n\r\n\r\n        <div >\r\n        <List>\r\n          <Collapse in={this.props.listOpenState} timeout=\"auto\" unmountOnExit>\r\n            <div className=\"list\">\r\n            <List component=\"div\">\r\n              <SideBar/>\r\n            </List>\r\n            </div>\r\n          </Collapse>\r\n        </List>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Header  from './header';\r\nimport SideBar  from './nav';\r\n\r\n\r\nclass App extends React.Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = {\r\n      open : false\r\n    };\r\n  }\r\n\r\n  handleNavOpen = () =>{\r\n    this.setState({open : !this.state.open});\r\n  };\r\n\r\n  render()\r\n  {\r\n    return(\r\n      <div className= 'App' >\r\n         <Header SideBarOpen={this.handleNavOpen} listOpenState = {this.state.open}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}